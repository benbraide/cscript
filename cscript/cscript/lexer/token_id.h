#pragma once

#ifndef CSCRIPT_TOKEN_ID_H
#define CSCRIPT_TOKEN_ID_H

namespace cscript{
	namespace lexer{
		enum class token_id{
			class_,
			enum_,
			namespace_,
			using_,
			new_,
			delete_,
			typedef_,
			operator_,
			sizeof_,
			typeof,
			echo,
			true_,
			false_,
			auto_,
			any,
			void_,
			bool_,
			bit,
			byte,
			nan,
			char_,
			wchar,
			short_,
			int_,
			long_,
			unsigned_,
			float_,
			double_,
			string,
			array_,
			try_,
			catch_,
			finally_,
			throw_,
			if_,
			else_,
			unless,
			while_,
			for_,
			until,
			do_,
			switch_,
			case_,
			default_,
			break_,
			continue_,
			return_,
			decltype_,
			function,
			nullptr_,
			pointer,
			tls,
			static_,
			const_,
			final_,
			ref,
			private_,
			protected_,
			public_,
			type_cast,
			self,
			placeholder,
			exp,
			real,
			rad,
			hex,
			dec,
			oct,
			bin,
			identifier,
			prop_sng,
			prop_multi,
			prep_incl,
			prep_def,
			prep_undef,
			prep_ifdef,
			prep_ifndef,
			prep_else,
			prep_endif,
			prep_pragma,
			open_sq,
			open_par,
			open_cur,
			close_sq,
			close_par,
			close_cur,
			semi_colon,
			comma,
			backslash,
			comment_sng,
			comment_mult,
			symbol,
			quote_dbl,
			quote_sng,
			quote_back,
			esc_quote_dbl,
			esc_quote_sng,
			esc_quote_back,
			new_line,
			blank,
			operator_symbol = 0xff,
			uchar,
			ushort,
			uint,
			ulong,
			llong,
			ullong,
			ldouble,
			error,
			nil,
		};
	}
}

#endif /* !CSCRIPT_TOKEN_ID_H */
